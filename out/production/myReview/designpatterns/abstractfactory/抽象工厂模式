1.模式定义：
    提供一个创建一系列相关或相互依赖对象的接口，而无需指定他们具体的类。
2.应用场景：
    程序需要处理不同系列的相关产品，但是你不希望它依赖于这些产品的具体类是，可以使用抽象工厂。
3.优点：
    （1）可以确信你从工厂得到的产品彼此是兼容的；
    （2）可以避免具体产品和客户端代码之间的紧密耦合；
    （3）符合单一职责原则；
    （4）符合开闭原则。
