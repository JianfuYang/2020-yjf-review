1、模式定义：定义算法族，分别封装起来，让他们之间可以互相替换，此模式的变化独立于算法的使用者。


2、场景：假设在开发一款僵尸大战的游戏，有两种僵尸：普通僵尸和旗手僵尸，他们的方法都一样：一步一步走，咬。


3、JDK中的典型应用
    1) Arrays.sort()的排序比较器;
    2) org.springframework.beans.factory.support.InstantiationStrategy接口：spring中该接口负责创建对应于根bean定义实例。各种方法都是可能的，包括使用CGLIB来动态创建子类，以支持方法注入==>该接口被定义成策略。
